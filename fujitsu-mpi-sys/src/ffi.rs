/* automatically generated by rust-bindgen 0.63.0 */

pub const OPAL_BUILD_PLATFORM_COMPILER_FAMILYID: u32 = 0;
pub const OPAL_BUILD_PLATFORM_COMPILER_VERSION: u32 = 0;
pub const OPAL_STDC_HEADERS: u32 = 1;
pub const OPAL_HAVE_ATTRIBUTE_DEPRECATED: u32 = 1;
pub const OPAL_HAVE_ATTRIBUTE_DEPRECATED_ARGUMENT: u32 = 1;
pub const OPAL_HAVE_ATTRIBUTE_ERROR: u32 = 0;
pub const OPAL_HAVE_SYS_TIME_H: u32 = 1;
pub const OPAL_HAVE_LONG_LONG: u32 = 1;
pub const OPAL_MAX_DATAREP_STRING: u32 = 128;
pub const OPAL_MAX_ERROR_STRING: u32 = 256;
pub const OPAL_MAX_INFO_KEY: u32 = 36;
pub const OPAL_MAX_INFO_VAL: u32 = 256;
pub const OPAL_MAX_OBJECT_NAME: u32 = 64;
pub const OPAL_MAX_PORT_NAME: u32 = 1024;
pub const OPAL_MAX_PROCESSOR_NAME: u32 = 256;
pub const OMPI_HAVE_FORTRAN_LOGICAL1: u32 = 1;
pub const OMPI_HAVE_FORTRAN_LOGICAL2: u32 = 1;
pub const OMPI_HAVE_FORTRAN_LOGICAL4: u32 = 1;
pub const OMPI_HAVE_FORTRAN_LOGICAL8: u32 = 1;
pub const OMPI_HAVE_FORTRAN_INTEGER1: u32 = 1;
pub const OMPI_HAVE_FORTRAN_INTEGER16: u32 = 0;
pub const OMPI_HAVE_FORTRAN_INTEGER2: u32 = 1;
pub const OMPI_HAVE_FORTRAN_INTEGER4: u32 = 1;
pub const OMPI_HAVE_FORTRAN_INTEGER8: u32 = 1;
pub const OMPI_HAVE_FORTRAN_REAL16: u32 = 1;
pub const OMPI_HAVE_FORTRAN_REAL2: u32 = 1;
pub const OMPI_HAVE_FORTRAN_REAL4: u32 = 1;
pub const OMPI_HAVE_FORTRAN_REAL8: u32 = 1;
pub const OMPI_ENABLE_MPI1_COMPAT: u32 = 1;
pub const HAVE_FLOAT__COMPLEX: u32 = 1;
pub const HAVE_DOUBLE__COMPLEX: u32 = 1;
pub const HAVE_LONG_DOUBLE__COMPLEX: u32 = 1;
pub const OMPI_MPI_OFFSET_SIZE: u32 = 8;
pub const OMPI_BUILD_CXX_BINDINGS: u32 = 1;
pub const OMPI_WANT_MPI_CXX_SEEK: u32 = 1;
pub const OMPI_CXX_SUPPORTS_2D_CONST_CAST: u32 = 1;
pub const OMPI_PARAM_CHECK: u32 = 0;
pub const OMPI_WANT_MPI_INTERFACE_WARNING: u32 = 0;
pub const OMPI_HAVE_CXX_EXCEPTION_SUPPORT: u32 = 0;
pub const OMPI_MAJOR_VERSION: u32 = 4;
pub const OMPI_MINOR_VERSION: u32 = 0;
pub const OMPI_RELEASE_VERSION: u32 = 1;
pub const OPAL_C_HAVE_VISIBILITY: u32 = 1;
pub const OMPI_BUILDING: u32 = 0;
pub const OPEN_MPI: u32 = 1;
pub const MPI_VERSION: u32 = 3;
pub const MPI_SUBVERSION: u32 = 1;
pub const PLATFORM_COMPILER_UNKNOWN: u32 = 1;
pub const PLATFORM_COMPILER_GNU: u32 = 1;
pub const PLATFORM_COMPILER_FAMILYID: u32 = 1;
pub const PLATFORM_COMPILER_GNU_C: u32 = 1;
pub const OMPI_REMOVED_USE_STATIC_ASSERT: u32 = 0;
pub const MPI_ANY_SOURCE: i32 = -1;
pub const MPI_PROC_NULL: i32 = -2;
pub const MPI_ROOT: i32 = -4;
pub const MPI_ANY_TAG: i32 = -1;
pub const MPI_MAX_PROCESSOR_NAME: u32 = 256;
pub const MPI_MAX_ERROR_STRING: u32 = 256;
pub const MPI_MAX_OBJECT_NAME: u32 = 64;
pub const MPI_MAX_LIBRARY_VERSION_STRING: u32 = 256;
pub const MPI_UNDEFINED: i32 = -32766;
pub const MPI_DIST_GRAPH: u32 = 3;
pub const MPI_CART: u32 = 1;
pub const MPI_GRAPH: u32 = 2;
pub const MPI_KEYVAL_INVALID: i32 = -1;
pub const MPI_BSEND_OVERHEAD: u32 = 128;
pub const MPI_MAX_INFO_KEY: u32 = 36;
pub const MPI_MAX_INFO_VAL: u32 = 256;
pub const MPI_MAX_PORT_NAME: u32 = 1024;
pub const MPI_ORDER_C: u32 = 0;
pub const MPI_ORDER_FORTRAN: u32 = 1;
pub const MPI_DISTRIBUTE_BLOCK: u32 = 0;
pub const MPI_DISTRIBUTE_CYCLIC: u32 = 1;
pub const MPI_DISTRIBUTE_NONE: u32 = 2;
pub const MPI_DISTRIBUTE_DFLT_DARG: i32 = -1;
pub const MPI_MODE_CREATE: u32 = 1;
pub const MPI_MODE_RDONLY: u32 = 2;
pub const MPI_MODE_WRONLY: u32 = 4;
pub const MPI_MODE_RDWR: u32 = 8;
pub const MPI_MODE_DELETE_ON_CLOSE: u32 = 16;
pub const MPI_MODE_UNIQUE_OPEN: u32 = 32;
pub const MPI_MODE_EXCL: u32 = 64;
pub const MPI_MODE_APPEND: u32 = 128;
pub const MPI_MODE_SEQUENTIAL: u32 = 256;
pub const MPI_DISPLACEMENT_CURRENT: i32 = -54278278;
pub const MPI_SEEK_SET: u32 = 600;
pub const MPI_SEEK_CUR: u32 = 602;
pub const MPI_SEEK_END: u32 = 604;
pub const MPI_MAX_DATAREP_STRING: u32 = 128;
pub const MPI_MODE_NOCHECK: u32 = 1;
pub const MPI_MODE_NOPRECEDE: u32 = 2;
pub const MPI_MODE_NOPUT: u32 = 4;
pub const MPI_MODE_NOSTORE: u32 = 8;
pub const MPI_MODE_NOSUCCEED: u32 = 16;
pub const MPI_LOCK_EXCLUSIVE: u32 = 1;
pub const MPI_LOCK_SHARED: u32 = 2;
pub const MPI_WIN_FLAVOR_CREATE: u32 = 1;
pub const MPI_WIN_FLAVOR_ALLOCATE: u32 = 2;
pub const MPI_WIN_FLAVOR_DYNAMIC: u32 = 3;
pub const MPI_WIN_FLAVOR_SHARED: u32 = 4;
pub const MPI_WIN_UNIFIED: u32 = 0;
pub const MPI_WIN_SEPARATE: u32 = 1;
pub const MPI_SUCCESS: u32 = 0;
pub const MPI_ERR_BUFFER: u32 = 1;
pub const MPI_ERR_COUNT: u32 = 2;
pub const MPI_ERR_TYPE: u32 = 3;
pub const MPI_ERR_TAG: u32 = 4;
pub const MPI_ERR_COMM: u32 = 5;
pub const MPI_ERR_RANK: u32 = 6;
pub const MPI_ERR_REQUEST: u32 = 7;
pub const MPI_ERR_ROOT: u32 = 8;
pub const MPI_ERR_GROUP: u32 = 9;
pub const MPI_ERR_OP: u32 = 10;
pub const MPI_ERR_TOPOLOGY: u32 = 11;
pub const MPI_ERR_DIMS: u32 = 12;
pub const MPI_ERR_ARG: u32 = 13;
pub const MPI_ERR_UNKNOWN: u32 = 14;
pub const MPI_ERR_TRUNCATE: u32 = 15;
pub const MPI_ERR_OTHER: u32 = 16;
pub const MPI_ERR_INTERN: u32 = 17;
pub const MPI_ERR_IN_STATUS: u32 = 18;
pub const MPI_ERR_PENDING: u32 = 19;
pub const MPI_ERR_ACCESS: u32 = 20;
pub const MPI_ERR_AMODE: u32 = 21;
pub const MPI_ERR_ASSERT: u32 = 22;
pub const MPI_ERR_BAD_FILE: u32 = 23;
pub const MPI_ERR_BASE: u32 = 24;
pub const MPI_ERR_CONVERSION: u32 = 25;
pub const MPI_ERR_DISP: u32 = 26;
pub const MPI_ERR_DUP_DATAREP: u32 = 27;
pub const MPI_ERR_FILE_EXISTS: u32 = 28;
pub const MPI_ERR_FILE_IN_USE: u32 = 29;
pub const MPI_ERR_FILE: u32 = 30;
pub const MPI_ERR_INFO_KEY: u32 = 31;
pub const MPI_ERR_INFO_NOKEY: u32 = 32;
pub const MPI_ERR_INFO_VALUE: u32 = 33;
pub const MPI_ERR_INFO: u32 = 34;
pub const MPI_ERR_IO: u32 = 35;
pub const MPI_ERR_KEYVAL: u32 = 36;
pub const MPI_ERR_LOCKTYPE: u32 = 37;
pub const MPI_ERR_NAME: u32 = 38;
pub const MPI_ERR_NO_MEM: u32 = 39;
pub const MPI_ERR_NOT_SAME: u32 = 40;
pub const MPI_ERR_NO_SPACE: u32 = 41;
pub const MPI_ERR_NO_SUCH_FILE: u32 = 42;
pub const MPI_ERR_PORT: u32 = 43;
pub const MPI_ERR_QUOTA: u32 = 44;
pub const MPI_ERR_READ_ONLY: u32 = 45;
pub const MPI_ERR_RMA_CONFLICT: u32 = 46;
pub const MPI_ERR_RMA_SYNC: u32 = 47;
pub const MPI_ERR_SERVICE: u32 = 48;
pub const MPI_ERR_SIZE: u32 = 49;
pub const MPI_ERR_SPAWN: u32 = 50;
pub const MPI_ERR_UNSUPPORTED_DATAREP: u32 = 51;
pub const MPI_ERR_UNSUPPORTED_OPERATION: u32 = 52;
pub const MPI_ERR_WIN: u32 = 53;
pub const MPI_T_ERR_MEMORY: u32 = 54;
pub const MPI_T_ERR_NOT_INITIALIZED: u32 = 55;
pub const MPI_T_ERR_CANNOT_INIT: u32 = 56;
pub const MPI_T_ERR_INVALID_INDEX: u32 = 57;
pub const MPI_T_ERR_INVALID_ITEM: u32 = 58;
pub const MPI_T_ERR_INVALID_HANDLE: u32 = 59;
pub const MPI_T_ERR_OUT_OF_HANDLES: u32 = 60;
pub const MPI_T_ERR_OUT_OF_SESSIONS: u32 = 61;
pub const MPI_T_ERR_INVALID_SESSION: u32 = 62;
pub const MPI_T_ERR_CVAR_SET_NOT_NOW: u32 = 63;
pub const MPI_T_ERR_CVAR_SET_NEVER: u32 = 64;
pub const MPI_T_ERR_PVAR_NO_STARTSTOP: u32 = 65;
pub const MPI_T_ERR_PVAR_NO_WRITE: u32 = 66;
pub const MPI_T_ERR_PVAR_NO_ATOMIC: u32 = 67;
pub const MPI_ERR_RMA_RANGE: u32 = 68;
pub const MPI_ERR_RMA_ATTACH: u32 = 69;
pub const MPI_ERR_RMA_FLAVOR: u32 = 70;
pub const MPI_ERR_RMA_SHARED: u32 = 71;
pub const MPI_T_ERR_INVALID: u32 = 72;
pub const MPI_T_ERR_INVALID_NAME: u32 = 73;
pub const MPI_ERR_LASTCODE: u32 = 92;
pub const MPI_TYPECLASS_INTEGER: u32 = 1;
pub const MPI_TYPECLASS_REAL: u32 = 2;
pub const MPI_TYPECLASS_COMPLEX: u32 = 3;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[test]
fn bindgen_test_layout_max_align_t() {
    const UNINIT: ::std::mem::MaybeUninit<max_align_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<max_align_t>(),
        32usize,
        concat!("Size of: ", stringify!(max_align_t))
    );
    assert_eq!(
        ::std::mem::align_of::<max_align_t>(),
        16usize,
        concat!("Alignment of ", stringify!(max_align_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce1)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).__clang_max_align_nonce2) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(max_align_t),
            "::",
            stringify!(__clang_max_align_nonce2)
        )
    );
}
pub type MPI_Aint = isize;
pub type MPI_Offset = ::std::os::raw::c_longlong;
pub type MPI_Count = ::std::os::raw::c_longlong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_communicator_t {
    _unused: [u8; 0],
}
pub type MPI_Comm = *mut ompi_communicator_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_datatype_t {
    _unused: [u8; 0],
}
pub type MPI_Datatype = *mut ompi_datatype_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_errhandler_t {
    _unused: [u8; 0],
}
pub type MPI_Errhandler = *mut ompi_errhandler_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_file_t {
    _unused: [u8; 0],
}
pub type MPI_File = *mut ompi_file_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_group_t {
    _unused: [u8; 0],
}
pub type MPI_Group = *mut ompi_group_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_info_t {
    _unused: [u8; 0],
}
pub type MPI_Info = *mut ompi_info_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_op_t {
    _unused: [u8; 0],
}
pub type MPI_Op = *mut ompi_op_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_request_t {
    _unused: [u8; 0],
}
pub type MPI_Request = *mut ompi_request_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_message_t {
    _unused: [u8; 0],
}
pub type MPI_Message = *mut ompi_message_t;
pub type MPI_Status = ompi_status_public_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_win_t {
    _unused: [u8; 0],
}
pub type MPI_Win = *mut ompi_win_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mca_base_var_enum_t {
    _unused: [u8; 0],
}
pub type MPI_T_enum = *mut mca_base_var_enum_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_mpit_cvar_handle_t {
    _unused: [u8; 0],
}
pub type MPI_T_cvar_handle = *mut ompi_mpit_cvar_handle_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mca_base_pvar_handle_t {
    _unused: [u8; 0],
}
pub type MPI_T_pvar_handle = *mut mca_base_pvar_handle_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mca_base_pvar_session_t {
    _unused: [u8; 0],
}
pub type MPI_T_pvar_session = *mut mca_base_pvar_session_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_status_public_t {
    pub MPI_SOURCE: ::std::os::raw::c_int,
    pub MPI_TAG: ::std::os::raw::c_int,
    pub MPI_ERROR: ::std::os::raw::c_int,
    pub _cancelled: ::std::os::raw::c_int,
    pub _ucount: usize,
}
#[test]
fn bindgen_test_layout_ompi_status_public_t() {
    const UNINIT: ::std::mem::MaybeUninit<ompi_status_public_t> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<ompi_status_public_t>(),
        24usize,
        concat!("Size of: ", stringify!(ompi_status_public_t))
    );
    assert_eq!(
        ::std::mem::align_of::<ompi_status_public_t>(),
        8usize,
        concat!("Alignment of ", stringify!(ompi_status_public_t))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).MPI_SOURCE) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ompi_status_public_t),
            "::",
            stringify!(MPI_SOURCE)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).MPI_TAG) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ompi_status_public_t),
            "::",
            stringify!(MPI_TAG)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).MPI_ERROR) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ompi_status_public_t),
            "::",
            stringify!(MPI_ERROR)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._cancelled) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ompi_status_public_t),
            "::",
            stringify!(_cancelled)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._ucount) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ompi_status_public_t),
            "::",
            stringify!(_ucount)
        )
    );
}
pub type MPI_Datarep_extent_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Datatype,
        arg2: *mut MPI_Aint,
        arg3: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Datarep_conversion_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_void,
        arg2: MPI_Datatype,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_void,
        arg5: MPI_Offset,
        arg6: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Comm_errhandler_function = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut MPI_Comm, arg2: *mut ::std::os::raw::c_int, ...),
>;
pub type ompi_file_errhandler_fn = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut MPI_File, arg2: *mut ::std::os::raw::c_int, ...),
>;
pub type MPI_Win_errhandler_function = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut MPI_Win, arg2: *mut ::std::os::raw::c_int, ...),
>;
pub type MPI_User_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_void,
        arg2: *mut ::std::os::raw::c_void,
        arg3: *mut ::std::os::raw::c_int,
        arg4: *mut MPI_Datatype,
    ),
>;
pub type MPI_Comm_copy_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Comm,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
        arg5: *mut ::std::os::raw::c_void,
        arg6: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Comm_delete_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Comm,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Type_copy_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Datatype,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
        arg5: *mut ::std::os::raw::c_void,
        arg6: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Type_delete_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Datatype,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Win_copy_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Win,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
        arg5: *mut ::std::os::raw::c_void,
        arg6: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Win_delete_attr_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Win,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Grequest_query_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_void,
        arg2: *mut MPI_Status,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Grequest_free_function = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int,
>;
pub type MPI_Grequest_cancel_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_void,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Comm_errhandler_fn = MPI_Comm_errhandler_function;
pub type MPI_File_errhandler_fn = ompi_file_errhandler_fn;
pub type MPI_File_errhandler_function = ompi_file_errhandler_fn;
pub type MPI_Win_errhandler_fn = MPI_Win_errhandler_function;
pub const MPI_TAG_UB: _bindgen_ty_1 = 0;
pub const MPI_HOST: _bindgen_ty_1 = 1;
pub const MPI_IO: _bindgen_ty_1 = 2;
pub const MPI_WTIME_IS_GLOBAL: _bindgen_ty_1 = 3;
pub const MPI_APPNUM: _bindgen_ty_1 = 4;
pub const MPI_LASTUSEDCODE: _bindgen_ty_1 = 5;
pub const MPI_UNIVERSE_SIZE: _bindgen_ty_1 = 6;
pub const MPI_WIN_BASE: _bindgen_ty_1 = 7;
pub const MPI_WIN_SIZE: _bindgen_ty_1 = 8;
pub const MPI_WIN_DISP_UNIT: _bindgen_ty_1 = 9;
pub const MPI_WIN_CREATE_FLAVOR: _bindgen_ty_1 = 10;
pub const MPI_WIN_MODEL: _bindgen_ty_1 = 11;
pub const IMPI_CLIENT_SIZE: _bindgen_ty_1 = 12;
pub const IMPI_CLIENT_COLOR: _bindgen_ty_1 = 13;
pub const IMPI_HOST_SIZE: _bindgen_ty_1 = 14;
pub const IMPI_HOST_COLOR: _bindgen_ty_1 = 15;
pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
pub const MPI_IDENT: _bindgen_ty_2 = 0;
pub const MPI_CONGRUENT: _bindgen_ty_2 = 1;
pub const MPI_SIMILAR: _bindgen_ty_2 = 2;
pub const MPI_UNEQUAL: _bindgen_ty_2 = 3;
pub type _bindgen_ty_2 = ::std::os::raw::c_uint;
pub const MPI_THREAD_SINGLE: _bindgen_ty_3 = 0;
pub const MPI_THREAD_FUNNELED: _bindgen_ty_3 = 1;
pub const MPI_THREAD_SERIALIZED: _bindgen_ty_3 = 2;
pub const MPI_THREAD_MULTIPLE: _bindgen_ty_3 = 3;
pub type _bindgen_ty_3 = ::std::os::raw::c_uint;
pub const MPI_COMBINER_NAMED: _bindgen_ty_4 = 0;
pub const MPI_COMBINER_DUP: _bindgen_ty_4 = 1;
pub const MPI_COMBINER_CONTIGUOUS: _bindgen_ty_4 = 2;
pub const MPI_COMBINER_VECTOR: _bindgen_ty_4 = 3;
pub const MPI_COMBINER_HVECTOR_INTEGER: _bindgen_ty_4 = 4;
pub const MPI_COMBINER_HVECTOR: _bindgen_ty_4 = 5;
pub const MPI_COMBINER_INDEXED: _bindgen_ty_4 = 6;
pub const MPI_COMBINER_HINDEXED_INTEGER: _bindgen_ty_4 = 7;
pub const MPI_COMBINER_HINDEXED: _bindgen_ty_4 = 8;
pub const MPI_COMBINER_INDEXED_BLOCK: _bindgen_ty_4 = 9;
pub const MPI_COMBINER_STRUCT_INTEGER: _bindgen_ty_4 = 10;
pub const MPI_COMBINER_STRUCT: _bindgen_ty_4 = 11;
pub const MPI_COMBINER_SUBARRAY: _bindgen_ty_4 = 12;
pub const MPI_COMBINER_DARRAY: _bindgen_ty_4 = 13;
pub const MPI_COMBINER_F90_REAL: _bindgen_ty_4 = 14;
pub const MPI_COMBINER_F90_COMPLEX: _bindgen_ty_4 = 15;
pub const MPI_COMBINER_F90_INTEGER: _bindgen_ty_4 = 16;
pub const MPI_COMBINER_RESIZED: _bindgen_ty_4 = 17;
pub const MPI_COMBINER_HINDEXED_BLOCK: _bindgen_ty_4 = 18;
pub type _bindgen_ty_4 = ::std::os::raw::c_uint;
pub const MPI_COMM_TYPE_SHARED: _bindgen_ty_5 = 0;
pub const OMPI_COMM_TYPE_HWTHREAD: _bindgen_ty_5 = 1;
pub const OMPI_COMM_TYPE_CORE: _bindgen_ty_5 = 2;
pub const OMPI_COMM_TYPE_L1CACHE: _bindgen_ty_5 = 3;
pub const OMPI_COMM_TYPE_L2CACHE: _bindgen_ty_5 = 4;
pub const OMPI_COMM_TYPE_L3CACHE: _bindgen_ty_5 = 5;
pub const OMPI_COMM_TYPE_SOCKET: _bindgen_ty_5 = 6;
pub const OMPI_COMM_TYPE_NUMA: _bindgen_ty_5 = 7;
pub const OMPI_COMM_TYPE_BOARD: _bindgen_ty_5 = 8;
pub const OMPI_COMM_TYPE_HOST: _bindgen_ty_5 = 9;
pub const OMPI_COMM_TYPE_CU: _bindgen_ty_5 = 10;
pub const OMPI_COMM_TYPE_CLUSTER: _bindgen_ty_5 = 11;
pub type _bindgen_ty_5 = ::std::os::raw::c_uint;
pub const MPI_T_VERBOSITY_USER_BASIC: _bindgen_ty_6 = 0;
pub const MPI_T_VERBOSITY_USER_DETAIL: _bindgen_ty_6 = 1;
pub const MPI_T_VERBOSITY_USER_ALL: _bindgen_ty_6 = 2;
pub const MPI_T_VERBOSITY_TUNER_BASIC: _bindgen_ty_6 = 3;
pub const MPI_T_VERBOSITY_TUNER_DETAIL: _bindgen_ty_6 = 4;
pub const MPI_T_VERBOSITY_TUNER_ALL: _bindgen_ty_6 = 5;
pub const MPI_T_VERBOSITY_MPIDEV_BASIC: _bindgen_ty_6 = 6;
pub const MPI_T_VERBOSITY_MPIDEV_DETAIL: _bindgen_ty_6 = 7;
pub const MPI_T_VERBOSITY_MPIDEV_ALL: _bindgen_ty_6 = 8;
pub type _bindgen_ty_6 = ::std::os::raw::c_uint;
pub const MPI_T_SCOPE_CONSTANT: _bindgen_ty_7 = 0;
pub const MPI_T_SCOPE_READONLY: _bindgen_ty_7 = 1;
pub const MPI_T_SCOPE_LOCAL: _bindgen_ty_7 = 2;
pub const MPI_T_SCOPE_GROUP: _bindgen_ty_7 = 3;
pub const MPI_T_SCOPE_GROUP_EQ: _bindgen_ty_7 = 4;
pub const MPI_T_SCOPE_ALL: _bindgen_ty_7 = 5;
pub const MPI_T_SCOPE_ALL_EQ: _bindgen_ty_7 = 6;
pub type _bindgen_ty_7 = ::std::os::raw::c_uint;
pub const MPI_T_BIND_NO_OBJECT: _bindgen_ty_8 = 0;
pub const MPI_T_BIND_MPI_COMM: _bindgen_ty_8 = 1;
pub const MPI_T_BIND_MPI_DATATYPE: _bindgen_ty_8 = 2;
pub const MPI_T_BIND_MPI_ERRHANDLER: _bindgen_ty_8 = 3;
pub const MPI_T_BIND_MPI_FILE: _bindgen_ty_8 = 4;
pub const MPI_T_BIND_MPI_GROUP: _bindgen_ty_8 = 5;
pub const MPI_T_BIND_MPI_OP: _bindgen_ty_8 = 6;
pub const MPI_T_BIND_MPI_REQUEST: _bindgen_ty_8 = 7;
pub const MPI_T_BIND_MPI_WIN: _bindgen_ty_8 = 8;
pub const MPI_T_BIND_MPI_MESSAGE: _bindgen_ty_8 = 9;
pub const MPI_T_BIND_MPI_INFO: _bindgen_ty_8 = 10;
pub type _bindgen_ty_8 = ::std::os::raw::c_uint;
pub const MPI_T_PVAR_CLASS_STATE: _bindgen_ty_9 = 0;
pub const MPI_T_PVAR_CLASS_LEVEL: _bindgen_ty_9 = 1;
pub const MPI_T_PVAR_CLASS_SIZE: _bindgen_ty_9 = 2;
pub const MPI_T_PVAR_CLASS_PERCENTAGE: _bindgen_ty_9 = 3;
pub const MPI_T_PVAR_CLASS_HIGHWATERMARK: _bindgen_ty_9 = 4;
pub const MPI_T_PVAR_CLASS_LOWWATERMARK: _bindgen_ty_9 = 5;
pub const MPI_T_PVAR_CLASS_COUNTER: _bindgen_ty_9 = 6;
pub const MPI_T_PVAR_CLASS_AGGREGATE: _bindgen_ty_9 = 7;
pub const MPI_T_PVAR_CLASS_TIMER: _bindgen_ty_9 = 8;
pub const MPI_T_PVAR_CLASS_GENERIC: _bindgen_ty_9 = 9;
pub type _bindgen_ty_9 = ::std::os::raw::c_uint;
extern "C" {
    pub fn OMPI_C_MPI_TYPE_NULL_DELETE_FN(
        datatype: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        attribute_val_out: *mut ::std::os::raw::c_void,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_TYPE_NULL_COPY_FN(
        datatype: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_TYPE_DUP_FN(
        datatype: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_COMM_NULL_DELETE_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val_out: *mut ::std::os::raw::c_void,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_COMM_NULL_COPY_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_COMM_DUP_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_WIN_NULL_DELETE_FN(
        window: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        attribute_val_out: *mut ::std::os::raw::c_void,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_WIN_NULL_COPY_FN(
        window: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_WIN_DUP_FN(
        window: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_communicator_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_comm_world: ompi_predefined_communicator_t;
}
extern "C" {
    pub static mut ompi_mpi_comm_self: ompi_predefined_communicator_t;
}
extern "C" {
    pub static mut ompi_mpi_comm_null: ompi_predefined_communicator_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_group_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_group_empty: ompi_predefined_group_t;
}
extern "C" {
    pub static mut ompi_mpi_group_null: ompi_predefined_group_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_request_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_request_null: ompi_predefined_request_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_message_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_message_null: ompi_predefined_message_t;
}
extern "C" {
    pub static mut ompi_message_no_proc: ompi_predefined_message_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_op_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_op_null: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_min: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_max: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_sum: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_prod: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_land: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_band: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_lor: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_bor: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_lxor: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_bxor: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_maxloc: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_minloc: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_replace: ompi_predefined_op_t;
}
extern "C" {
    pub static mut ompi_mpi_op_no_op: ompi_predefined_op_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_datatype_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_datatype_null: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_char: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_signed_char: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_unsigned_char: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_byte: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_short: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_unsigned_short: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_unsigned: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_long: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_unsigned_long: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_long_long_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_unsigned_long_long: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_float: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_double: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_long_double: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_wchar: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_packed: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_cxx_bool: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_cxx_cplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_cxx_dblcplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_cxx_ldblcplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_logical: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_character: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_real: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_dblprec: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_cplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_dblcplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_ldblcplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2integer: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2real: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2dblprec: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2cplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_2dblcplex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_float_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_double_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_longdbl_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_short_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_long_int: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_logical1: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_logical2: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_logical4: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_logical8: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer1: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer2: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer4: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer8: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_integer16: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_real2: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_real4: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_real8: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_real16: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_complex4: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_complex8: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_complex16: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_complex32: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_int8_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_uint8_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_int16_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_uint16_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_int32_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_uint32_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_int64_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_uint64_t: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_aint: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_offset: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_count: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_c_bool: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_c_float_complex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_c_double_complex: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_c_long_double_complex: ompi_predefined_datatype_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_errhandler_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_errhandler_null: ompi_predefined_errhandler_t;
}
extern "C" {
    pub static mut ompi_mpi_errors_are_fatal: ompi_predefined_errhandler_t;
}
extern "C" {
    pub static mut ompi_mpi_errors_return: ompi_predefined_errhandler_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_win_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_win_null: ompi_predefined_win_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_file_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_file_null: ompi_predefined_file_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ompi_predefined_info_t {
    _unused: [u8; 0],
}
extern "C" {
    pub static mut ompi_mpi_info_null: ompi_predefined_info_t;
}
extern "C" {
    pub static mut ompi_mpi_info_env: ompi_predefined_info_t;
}
extern "C" {
    pub static mut MPI_F_STATUS_IGNORE: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut MPI_F_STATUSES_IGNORE: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut ompi_mpi_lb: ompi_predefined_datatype_t;
}
extern "C" {
    pub static mut ompi_mpi_ub: ompi_predefined_datatype_t;
}
extern "C" {
    pub fn MPI_Abort(comm: MPI_Comm, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Add_error_class(errorclass: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Add_error_code(
        errorclass: ::std::os::raw::c_int,
        errorcode: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Add_error_string(
        errorcode: ::std::os::raw::c_int,
        string: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iallgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iallgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Alloc_mem(
        size: MPI_Aint,
        info: MPI_Info,
        baseptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Allreduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iallreduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ialltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ialltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ialltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Barrier(comm: MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ibarrier(comm: MPI_Comm, request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Bcast(
        buffer: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Bsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ibcast(
        buffer: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Bsend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Buffer_attach(
        buffer: *mut ::std::os::raw::c_void,
        size: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Buffer_detach(
        buffer: *mut ::std::os::raw::c_void,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cancel(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_coords(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        maxdims: ::std::os::raw::c_int,
        coords: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_create(
        old_comm: MPI_Comm,
        ndims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
        periods: *const ::std::os::raw::c_int,
        reorder: ::std::os::raw::c_int,
        comm_cart: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_get(
        comm: MPI_Comm,
        maxdims: ::std::os::raw::c_int,
        dims: *mut ::std::os::raw::c_int,
        periods: *mut ::std::os::raw::c_int,
        coords: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_map(
        comm: MPI_Comm,
        ndims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
        periods: *const ::std::os::raw::c_int,
        newrank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_rank(
        comm: MPI_Comm,
        coords: *const ::std::os::raw::c_int,
        rank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_shift(
        comm: MPI_Comm,
        direction: ::std::os::raw::c_int,
        disp: ::std::os::raw::c_int,
        rank_source: *mut ::std::os::raw::c_int,
        rank_dest: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cart_sub(
        comm: MPI_Comm,
        remain_dims: *const ::std::os::raw::c_int,
        new_comm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Cartdim_get(
        comm: MPI_Comm,
        ndims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Close_port(port_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_accept(
        port_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_c2f(comm: MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_call_errhandler(
        comm: MPI_Comm,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_compare(
        comm1: MPI_Comm,
        comm2: MPI_Comm,
        result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_connect(
        port_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_create_errhandler(
        function: MPI_Comm_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_create_keyval(
        comm_copy_attr_fn: MPI_Comm_copy_attr_function,
        comm_delete_attr_fn: MPI_Comm_delete_attr_function,
        comm_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_create_group(
        comm: MPI_Comm,
        group: MPI_Group,
        tag: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_create(
        comm: MPI_Comm,
        group: MPI_Group,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_delete_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_disconnect(comm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_dup(comm: MPI_Comm, newcomm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_idup(
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_dup_with_info(
        comm: MPI_Comm,
        info: MPI_Info,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_f2c(comm: ::std::os::raw::c_int) -> MPI_Comm;
}
extern "C" {
    pub fn MPI_Comm_free_keyval(comm_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_free(comm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_get_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Dist_graph_create(
        comm_old: MPI_Comm,
        n: ::std::os::raw::c_int,
        nodes: *const ::std::os::raw::c_int,
        degrees: *const ::std::os::raw::c_int,
        targets: *const ::std::os::raw::c_int,
        weights: *const ::std::os::raw::c_int,
        info: MPI_Info,
        reorder: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Dist_graph_create_adjacent(
        comm_old: MPI_Comm,
        indegree: ::std::os::raw::c_int,
        sources: *const ::std::os::raw::c_int,
        sourceweights: *const ::std::os::raw::c_int,
        outdegree: ::std::os::raw::c_int,
        destinations: *const ::std::os::raw::c_int,
        destweights: *const ::std::os::raw::c_int,
        info: MPI_Info,
        reorder: ::std::os::raw::c_int,
        comm_dist_graph: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Dist_graph_neighbors(
        comm: MPI_Comm,
        maxindegree: ::std::os::raw::c_int,
        sources: *mut ::std::os::raw::c_int,
        sourceweights: *mut ::std::os::raw::c_int,
        maxoutdegree: ::std::os::raw::c_int,
        destinations: *mut ::std::os::raw::c_int,
        destweights: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Dist_graph_neighbors_count(
        comm: MPI_Comm,
        inneighbors: *mut ::std::os::raw::c_int,
        outneighbors: *mut ::std::os::raw::c_int,
        weighted: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_get_errhandler(
        comm: MPI_Comm,
        erhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_get_info(comm: MPI_Comm, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_get_name(
        comm: MPI_Comm,
        comm_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_get_parent(parent: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_group(comm: MPI_Comm, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_join(
        fd: ::std::os::raw::c_int,
        intercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_rank(comm: MPI_Comm, rank: *mut ::std::os::raw::c_int)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_remote_group(comm: MPI_Comm, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_remote_size(
        comm: MPI_Comm,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_set_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_set_errhandler(
        comm: MPI_Comm,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_set_info(comm: MPI_Comm, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_set_name(
        comm: MPI_Comm,
        comm_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_size(comm: MPI_Comm, size: *mut ::std::os::raw::c_int)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_spawn(
        command: *const ::std::os::raw::c_char,
        argv: *mut *mut ::std::os::raw::c_char,
        maxprocs: ::std::os::raw::c_int,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        intercomm: *mut MPI_Comm,
        array_of_errcodes: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_spawn_multiple(
        count: ::std::os::raw::c_int,
        array_of_commands: *mut *mut ::std::os::raw::c_char,
        array_of_argv: *mut *mut *mut ::std::os::raw::c_char,
        array_of_maxprocs: *const ::std::os::raw::c_int,
        array_of_info: *const MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        intercomm: *mut MPI_Comm,
        array_of_errcodes: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_split(
        comm: MPI_Comm,
        color: ::std::os::raw::c_int,
        key: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_split_type(
        comm: MPI_Comm,
        split_type: ::std::os::raw::c_int,
        key: ::std::os::raw::c_int,
        info: MPI_Info,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Comm_test_inter(
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Compare_and_swap(
        origin_addr: *const ::std::os::raw::c_void,
        compare_addr: *const ::std::os::raw::c_void,
        result_addr: *mut ::std::os::raw::c_void,
        datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Dims_create(
        nnodes: ::std::os::raw::c_int,
        ndims: ::std::os::raw::c_int,
        dims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Errhandler_c2f(errhandler: MPI_Errhandler) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Errhandler_f2c(errhandler: ::std::os::raw::c_int) -> MPI_Errhandler;
}
extern "C" {
    pub fn MPI_Errhandler_free(errhandler: *mut MPI_Errhandler) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Error_class(
        errorcode: ::std::os::raw::c_int,
        errorclass: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Error_string(
        errorcode: ::std::os::raw::c_int,
        string: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Exscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Fetch_and_op(
        origin_addr: *const ::std::os::raw::c_void,
        result_addr: *mut ::std::os::raw::c_void,
        datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iexscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_c2f(file: MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_f2c(file: ::std::os::raw::c_int) -> MPI_File;
}
extern "C" {
    pub fn MPI_File_call_errhandler(
        fh: MPI_File,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_create_errhandler(
        function: MPI_File_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_set_errhandler(
        file: MPI_File,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_errhandler(
        file: MPI_File,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_open(
        comm: MPI_Comm,
        filename: *const ::std::os::raw::c_char,
        amode: ::std::os::raw::c_int,
        info: MPI_Info,
        fh: *mut MPI_File,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_close(fh: *mut MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_delete(
        filename: *const ::std::os::raw::c_char,
        info: MPI_Info,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_set_size(fh: MPI_File, size: MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_preallocate(fh: MPI_File, size: MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_size(fh: MPI_File, size: *mut MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_group(fh: MPI_File, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_amode(
        fh: MPI_File,
        amode: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_set_info(fh: MPI_File, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_info(fh: MPI_File, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_set_view(
        fh: MPI_File,
        disp: MPI_Offset,
        etype: MPI_Datatype,
        filetype: MPI_Datatype,
        datarep: *const ::std::os::raw::c_char,
        info: MPI_Info,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_view(
        fh: MPI_File,
        disp: *mut MPI_Offset,
        etype: *mut MPI_Datatype,
        filetype: *mut MPI_Datatype,
        datarep: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iread_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iwrite_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iread_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iwrite_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_all(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_all(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iread(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iwrite(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iread_all(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iwrite_all(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_seek(
        fh: MPI_File,
        offset: MPI_Offset,
        whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_position(fh: MPI_File, offset: *mut MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_byte_offset(
        fh: MPI_File,
        offset: MPI_Offset,
        disp: *mut MPI_Offset,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_shared(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_shared(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iread_shared(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_iwrite_shared(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_ordered(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_ordered(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_seek_shared(
        fh: MPI_File,
        offset: MPI_Offset,
        whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_position_shared(
        fh: MPI_File,
        offset: *mut MPI_Offset,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_at_all_begin(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_at_all_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_at_all_begin(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_at_all_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_all_begin(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_all_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_all_begin(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_all_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_ordered_begin(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_read_ordered_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_ordered_begin(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_write_ordered_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_type_extent(
        fh: MPI_File,
        datatype: MPI_Datatype,
        extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_set_atomicity(
        fh: MPI_File,
        flag: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_get_atomicity(
        fh: MPI_File,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_File_sync(fh: MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Finalize() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Finalized(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Free_mem(base: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Gather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Igather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Gatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Igatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_address(
        location: *const ::std::os::raw::c_void,
        address: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_count(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_elements(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_elements_x(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get(
        origin_addr: *mut ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        result_addr: *mut ::std::os::raw::c_void,
        result_count: ::std::os::raw::c_int,
        result_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_library_version(
        version: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_processor_name(
        name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Get_version(
        version: *mut ::std::os::raw::c_int,
        subversion: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graph_create(
        comm_old: MPI_Comm,
        nnodes: ::std::os::raw::c_int,
        index: *const ::std::os::raw::c_int,
        edges: *const ::std::os::raw::c_int,
        reorder: ::std::os::raw::c_int,
        comm_graph: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graph_get(
        comm: MPI_Comm,
        maxindex: ::std::os::raw::c_int,
        maxedges: ::std::os::raw::c_int,
        index: *mut ::std::os::raw::c_int,
        edges: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graph_map(
        comm: MPI_Comm,
        nnodes: ::std::os::raw::c_int,
        index: *const ::std::os::raw::c_int,
        edges: *const ::std::os::raw::c_int,
        newrank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graph_neighbors_count(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        nneighbors: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graph_neighbors(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        maxneighbors: ::std::os::raw::c_int,
        neighbors: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Graphdims_get(
        comm: MPI_Comm,
        nnodes: *mut ::std::os::raw::c_int,
        nedges: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Grequest_complete(request: MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Grequest_start(
        query_fn: MPI_Grequest_query_function,
        free_fn: MPI_Grequest_free_function,
        cancel_fn: MPI_Grequest_cancel_function,
        extra_state: *mut ::std::os::raw::c_void,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_c2f(group: MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_compare(
        group1: MPI_Group,
        group2: MPI_Group,
        result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_difference(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_excl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks: *const ::std::os::raw::c_int,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_f2c(group: ::std::os::raw::c_int) -> MPI_Group;
}
extern "C" {
    pub fn MPI_Group_free(group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_incl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks: *const ::std::os::raw::c_int,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_intersection(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_range_excl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranges: *mut [::std::os::raw::c_int; 3usize],
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_range_incl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranges: *mut [::std::os::raw::c_int; 3usize],
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_rank(
        group: MPI_Group,
        rank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_size(
        group: MPI_Group,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_translate_ranks(
        group1: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks1: *const ::std::os::raw::c_int,
        group2: MPI_Group,
        ranks2: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Group_union(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ibsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Improbe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Imrecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        type_: MPI_Datatype,
        message: *mut MPI_Message,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_c2f(info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_create(info: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_delete(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_dup(info: MPI_Info, newinfo: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_f2c(info: ::std::os::raw::c_int) -> MPI_Info;
}
extern "C" {
    pub fn MPI_Info_free(info: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_get(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        valuelen: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_char,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_get_nkeys(
        info: MPI_Info,
        nkeys: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_get_nthkey(
        info: MPI_Info,
        n: ::std::os::raw::c_int,
        key: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_get_valuelen(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        valuelen: *mut ::std::os::raw::c_int,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Info_set(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Init(
        argc: *mut ::std::os::raw::c_int,
        argv: *mut *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Initialized(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Init_thread(
        argc: *mut ::std::os::raw::c_int,
        argv: *mut *mut *mut ::std::os::raw::c_char,
        required: ::std::os::raw::c_int,
        provided: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Intercomm_create(
        local_comm: MPI_Comm,
        local_leader: ::std::os::raw::c_int,
        bridge_comm: MPI_Comm,
        remote_leader: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        newintercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Intercomm_merge(
        intercomm: MPI_Comm,
        high: ::std::os::raw::c_int,
        newintercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iprobe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Irecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Irsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Isend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Issend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Is_thread_main(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Lookup_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Message_c2f(message: MPI_Message) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Message_f2c(message: ::std::os::raw::c_int) -> MPI_Message;
}
extern "C" {
    pub fn MPI_Mprobe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Mrecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        type_: MPI_Datatype,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Neighbor_allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ineighbor_allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Neighbor_allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ineighbor_allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Neighbor_alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ineighbor_alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Neighbor_alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ineighbor_alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Neighbor_alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const MPI_Aint,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const MPI_Aint,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ineighbor_alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const MPI_Aint,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const MPI_Aint,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Op_c2f(op: MPI_Op) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Op_commutative(
        op: MPI_Op,
        commute: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Op_create(
        function: MPI_User_function,
        commute: ::std::os::raw::c_int,
        op: *mut MPI_Op,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Open_port(
        info: MPI_Info,
        port_name: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Op_f2c(op: ::std::os::raw::c_int) -> MPI_Op;
}
extern "C" {
    pub fn MPI_Op_free(op: *mut MPI_Op) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Pack_external(
        datarep: *const ::std::os::raw::c_char,
        inbuf: *const ::std::os::raw::c_void,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        outbuf: *mut ::std::os::raw::c_void,
        outsize: MPI_Aint,
        position: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Pack_external_size(
        datarep: *const ::std::os::raw::c_char,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        size: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Pack(
        inbuf: *const ::std::os::raw::c_void,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        outbuf: *mut ::std::os::raw::c_void,
        outsize: ::std::os::raw::c_int,
        position: *mut ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Pack_size(
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        comm: MPI_Comm,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Pcontrol(level: ::std::os::raw::c_int, ...) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Probe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Publish_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Put(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Query_thread(provided: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Raccumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Recv_init(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Recv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Reduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ireduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Reduce_local(
        inbuf: *const ::std::os::raw::c_void,
        inoutbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Reduce_scatter(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ireduce_scatter(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Reduce_scatter_block(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ireduce_scatter_block(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Register_datarep(
        datarep: *const ::std::os::raw::c_char,
        read_conversion_fn: MPI_Datarep_conversion_function,
        write_conversion_fn: MPI_Datarep_conversion_function,
        dtype_file_extent_fn: MPI_Datarep_extent_function,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Request_c2f(request: MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Request_f2c(request: ::std::os::raw::c_int) -> MPI_Request;
}
extern "C" {
    pub fn MPI_Request_free(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Request_get_status(
        request: MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Rget(
        origin_addr: *mut ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Rget_accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        result_addr: *mut ::std::os::raw::c_void,
        result_count: ::std::os::raw::c_int,
        result_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Rput(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_cout: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Rsend(
        ibuf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Rsend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Scan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Scatter(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iscatter(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Scatterv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Iscatterv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Send_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Send(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Sendrecv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        sendtag: ::std::os::raw::c_int,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        recvtag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Sendrecv_replace(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        sendtag: ::std::os::raw::c_int,
        source: ::std::os::raw::c_int,
        recvtag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ssend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Ssend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Start(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Startall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Status_c2f(
        c_status: *const MPI_Status,
        f_status: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Status_f2c(
        f_status: *const ::std::os::raw::c_int,
        c_status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Status_set_cancelled(
        status: *mut MPI_Status,
        flag: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Status_set_elements(
        status: *mut MPI_Status,
        datatype: MPI_Datatype,
        count: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Status_set_elements_x(
        status: *mut MPI_Status,
        datatype: MPI_Datatype,
        count: MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Testall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Testany(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        index: *mut ::std::os::raw::c_int,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Test(
        request: *mut MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Test_cancelled(
        status: *const MPI_Status,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Testsome(
        incount: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        outcount: *mut ::std::os::raw::c_int,
        array_of_indices: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Topo_test(
        comm: MPI_Comm,
        status: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_c2f(datatype: MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_commit(type_: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_contiguous(
        count: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_darray(
        size: ::std::os::raw::c_int,
        rank: ::std::os::raw::c_int,
        ndims: ::std::os::raw::c_int,
        gsize_array: *const ::std::os::raw::c_int,
        distrib_array: *const ::std::os::raw::c_int,
        darg_array: *const ::std::os::raw::c_int,
        psize_array: *const ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_f90_complex(
        p: ::std::os::raw::c_int,
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_f90_integer(
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_f90_real(
        p: ::std::os::raw::c_int,
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_hindexed_block(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_hindexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_hvector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_keyval(
        type_copy_attr_fn: MPI_Type_copy_attr_function,
        type_delete_attr_fn: MPI_Type_delete_attr_function,
        type_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_indexed_block(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        array_of_displacements: *const ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_struct(
        count: ::std::os::raw::c_int,
        array_of_block_lengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        array_of_types: *const MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_subarray(
        ndims: ::std::os::raw::c_int,
        size_array: *const ::std::os::raw::c_int,
        subsize_array: *const ::std::os::raw::c_int,
        start_array: *const ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_create_resized(
        oldtype: MPI_Datatype,
        lb: MPI_Aint,
        extent: MPI_Aint,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_delete_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_dup(type_: MPI_Datatype, newtype: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_free(type_: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_free_keyval(type_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_f2c(datatype: ::std::os::raw::c_int) -> MPI_Datatype;
}
extern "C" {
    pub fn MPI_Type_get_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_contents(
        mtype: MPI_Datatype,
        max_integers: ::std::os::raw::c_int,
        max_addresses: ::std::os::raw::c_int,
        max_datatypes: ::std::os::raw::c_int,
        array_of_integers: *mut ::std::os::raw::c_int,
        array_of_addresses: *mut MPI_Aint,
        array_of_datatypes: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_envelope(
        type_: MPI_Datatype,
        num_integers: *mut ::std::os::raw::c_int,
        num_addresses: *mut ::std::os::raw::c_int,
        num_datatypes: *mut ::std::os::raw::c_int,
        combiner: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_extent(
        type_: MPI_Datatype,
        lb: *mut MPI_Aint,
        extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_extent_x(
        type_: MPI_Datatype,
        lb: *mut MPI_Count,
        extent: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_name(
        type_: MPI_Datatype,
        type_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_true_extent(
        datatype: MPI_Datatype,
        true_lb: *mut MPI_Aint,
        true_extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_get_true_extent_x(
        datatype: MPI_Datatype,
        true_lb: *mut MPI_Count,
        true_extent: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_indexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_match_size(
        typeclass: ::std::os::raw::c_int,
        size: ::std::os::raw::c_int,
        type_: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_set_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        attr_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_set_name(
        type_: MPI_Datatype,
        type_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_size(
        type_: MPI_Datatype,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_size_x(type_: MPI_Datatype, size: *mut MPI_Count) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_vector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Unpack(
        inbuf: *const ::std::os::raw::c_void,
        insize: ::std::os::raw::c_int,
        position: *mut ::std::os::raw::c_int,
        outbuf: *mut ::std::os::raw::c_void,
        outcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Unpublish_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Unpack_external(
        datarep: *const ::std::os::raw::c_char,
        inbuf: *const ::std::os::raw::c_void,
        insize: MPI_Aint,
        position: *mut MPI_Aint,
        outbuf: *mut ::std::os::raw::c_void,
        outcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Waitall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Waitany(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        index: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Wait(request: *mut MPI_Request, status: *mut MPI_Status) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Waitsome(
        incount: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        outcount: *mut ::std::os::raw::c_int,
        array_of_indices: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_allocate(
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        baseptr: *mut ::std::os::raw::c_void,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_allocate_shared(
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        baseptr: *mut ::std::os::raw::c_void,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_attach(
        win: MPI_Win,
        base: *mut ::std::os::raw::c_void,
        size: MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_c2f(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_call_errhandler(
        win: MPI_Win,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_complete(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_create(
        base: *mut ::std::os::raw::c_void,
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_create_dynamic(
        info: MPI_Info,
        comm: MPI_Comm,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_create_errhandler(
        function: MPI_Win_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_create_keyval(
        win_copy_attr_fn: MPI_Win_copy_attr_function,
        win_delete_attr_fn: MPI_Win_delete_attr_function,
        win_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_delete_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_detach(
        win: MPI_Win,
        base: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_f2c(win: ::std::os::raw::c_int) -> MPI_Win;
}
extern "C" {
    pub fn MPI_Win_fence(assert: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_flush(rank: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_flush_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_flush_local(rank: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_flush_local_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_free(win: *mut MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_free_keyval(win_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_get_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_get_errhandler(
        win: MPI_Win,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_get_group(win: MPI_Win, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_get_info(win: MPI_Win, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_get_name(
        win: MPI_Win,
        win_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_lock(
        lock_type: ::std::os::raw::c_int,
        rank: ::std::os::raw::c_int,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_lock_all(assert: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_post(
        group: MPI_Group,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_set_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_set_errhandler(
        win: MPI_Win,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_set_info(win: MPI_Win, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_set_name(
        win: MPI_Win,
        win_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_shared_query(
        win: MPI_Win,
        rank: ::std::os::raw::c_int,
        size: *mut MPI_Aint,
        disp_unit: *mut ::std::os::raw::c_int,
        baseptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_start(
        group: MPI_Group,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_sync(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_test(win: MPI_Win, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_unlock(rank: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_unlock_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Win_wait(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Wtick() -> f64;
}
extern "C" {
    pub fn MPI_Wtime() -> f64;
}
extern "C" {
    pub fn PMPI_Abort(comm: MPI_Comm, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Add_error_class(errorclass: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Add_error_code(
        errorclass: ::std::os::raw::c_int,
        errorcode: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Add_error_string(
        errorcode: ::std::os::raw::c_int,
        string: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iallgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iallgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Alloc_mem(
        size: MPI_Aint,
        info: MPI_Info,
        baseptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Allreduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iallreduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ialltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ialltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ialltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Dist_graph_create(
        comm_old: MPI_Comm,
        n: ::std::os::raw::c_int,
        nodes: *const ::std::os::raw::c_int,
        degrees: *const ::std::os::raw::c_int,
        targets: *const ::std::os::raw::c_int,
        weights: *const ::std::os::raw::c_int,
        info: MPI_Info,
        reorder: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Dist_graph_create_adjacent(
        comm_old: MPI_Comm,
        indegree: ::std::os::raw::c_int,
        sources: *const ::std::os::raw::c_int,
        sourceweights: *const ::std::os::raw::c_int,
        outdegree: ::std::os::raw::c_int,
        destinations: *const ::std::os::raw::c_int,
        destweights: *const ::std::os::raw::c_int,
        info: MPI_Info,
        reorder: ::std::os::raw::c_int,
        comm_dist_graph: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Dist_graph_neighbors(
        comm: MPI_Comm,
        maxindegree: ::std::os::raw::c_int,
        sources: *mut ::std::os::raw::c_int,
        sourceweights: *mut ::std::os::raw::c_int,
        maxoutdegree: ::std::os::raw::c_int,
        destinations: *mut ::std::os::raw::c_int,
        destweights: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Dist_graph_neighbors_count(
        comm: MPI_Comm,
        inneighbors: *mut ::std::os::raw::c_int,
        outneighbors: *mut ::std::os::raw::c_int,
        weighted: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Barrier(comm: MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ibarrier(comm: MPI_Comm, request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Bcast(
        buffer: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ibcast(
        buffer: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Bsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Bsend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Buffer_attach(
        buffer: *mut ::std::os::raw::c_void,
        size: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Buffer_detach(
        buffer: *mut ::std::os::raw::c_void,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cancel(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_coords(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        maxdims: ::std::os::raw::c_int,
        coords: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_create(
        old_comm: MPI_Comm,
        ndims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
        periods: *const ::std::os::raw::c_int,
        reorder: ::std::os::raw::c_int,
        comm_cart: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_get(
        comm: MPI_Comm,
        maxdims: ::std::os::raw::c_int,
        dims: *mut ::std::os::raw::c_int,
        periods: *mut ::std::os::raw::c_int,
        coords: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_map(
        comm: MPI_Comm,
        ndims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
        periods: *const ::std::os::raw::c_int,
        newrank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_rank(
        comm: MPI_Comm,
        coords: *const ::std::os::raw::c_int,
        rank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_shift(
        comm: MPI_Comm,
        direction: ::std::os::raw::c_int,
        disp: ::std::os::raw::c_int,
        rank_source: *mut ::std::os::raw::c_int,
        rank_dest: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cart_sub(
        comm: MPI_Comm,
        remain_dims: *const ::std::os::raw::c_int,
        new_comm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Cartdim_get(
        comm: MPI_Comm,
        ndims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Close_port(port_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_accept(
        port_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_c2f(comm: MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_call_errhandler(
        comm: MPI_Comm,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_compare(
        comm1: MPI_Comm,
        comm2: MPI_Comm,
        result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_connect(
        port_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_create_errhandler(
        function: MPI_Comm_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_create_keyval(
        comm_copy_attr_fn: MPI_Comm_copy_attr_function,
        comm_delete_attr_fn: MPI_Comm_delete_attr_function,
        comm_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_create_group(
        comm: MPI_Comm,
        group: MPI_Group,
        tag: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_create(
        comm: MPI_Comm,
        group: MPI_Group,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_delete_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_disconnect(comm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_dup(comm: MPI_Comm, newcomm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_idup(
        comm: MPI_Comm,
        newcomm: *mut MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_dup_with_info(
        comm: MPI_Comm,
        info: MPI_Info,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_f2c(comm: ::std::os::raw::c_int) -> MPI_Comm;
}
extern "C" {
    pub fn PMPI_Comm_free_keyval(comm_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_free(comm: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_get_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_get_errhandler(
        comm: MPI_Comm,
        erhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_get_info(comm: MPI_Comm, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_get_name(
        comm: MPI_Comm,
        comm_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_get_parent(parent: *mut MPI_Comm) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_group(comm: MPI_Comm, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_join(
        fd: ::std::os::raw::c_int,
        intercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_rank(
        comm: MPI_Comm,
        rank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_remote_group(comm: MPI_Comm, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_remote_size(
        comm: MPI_Comm,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_set_attr(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_set_errhandler(
        comm: MPI_Comm,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_set_info(comm: MPI_Comm, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_set_name(
        comm: MPI_Comm,
        comm_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_size(
        comm: MPI_Comm,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_spawn(
        command: *const ::std::os::raw::c_char,
        argv: *mut *mut ::std::os::raw::c_char,
        maxprocs: ::std::os::raw::c_int,
        info: MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        intercomm: *mut MPI_Comm,
        array_of_errcodes: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_spawn_multiple(
        count: ::std::os::raw::c_int,
        array_of_commands: *mut *mut ::std::os::raw::c_char,
        array_of_argv: *mut *mut *mut ::std::os::raw::c_char,
        array_of_maxprocs: *const ::std::os::raw::c_int,
        array_of_info: *const MPI_Info,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        intercomm: *mut MPI_Comm,
        array_of_errcodes: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_split(
        comm: MPI_Comm,
        color: ::std::os::raw::c_int,
        key: ::std::os::raw::c_int,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_split_type(
        comm: MPI_Comm,
        split_type: ::std::os::raw::c_int,
        key: ::std::os::raw::c_int,
        info: MPI_Info,
        newcomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Comm_test_inter(
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Compare_and_swap(
        origin_addr: *const ::std::os::raw::c_void,
        compare_addr: *const ::std::os::raw::c_void,
        result_addr: *mut ::std::os::raw::c_void,
        datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Dims_create(
        nnodes: ::std::os::raw::c_int,
        ndims: ::std::os::raw::c_int,
        dims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Errhandler_c2f(errhandler: MPI_Errhandler) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Errhandler_f2c(errhandler: ::std::os::raw::c_int) -> MPI_Errhandler;
}
extern "C" {
    pub fn PMPI_Errhandler_free(errhandler: *mut MPI_Errhandler) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Error_class(
        errorcode: ::std::os::raw::c_int,
        errorclass: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Error_string(
        errorcode: ::std::os::raw::c_int,
        string: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Exscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Fetch_and_op(
        origin_addr: *const ::std::os::raw::c_void,
        result_addr: *mut ::std::os::raw::c_void,
        datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iexscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_c2f(file: MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_f2c(file: ::std::os::raw::c_int) -> MPI_File;
}
extern "C" {
    pub fn PMPI_File_call_errhandler(
        fh: MPI_File,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_create_errhandler(
        function: MPI_File_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_set_errhandler(
        file: MPI_File,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_errhandler(
        file: MPI_File,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_open(
        comm: MPI_Comm,
        filename: *const ::std::os::raw::c_char,
        amode: ::std::os::raw::c_int,
        info: MPI_Info,
        fh: *mut MPI_File,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_close(fh: *mut MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_delete(
        filename: *const ::std::os::raw::c_char,
        info: MPI_Info,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_set_size(fh: MPI_File, size: MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_preallocate(fh: MPI_File, size: MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_size(fh: MPI_File, size: *mut MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_group(fh: MPI_File, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_amode(
        fh: MPI_File,
        amode: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_set_info(fh: MPI_File, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_info(fh: MPI_File, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_set_view(
        fh: MPI_File,
        disp: MPI_Offset,
        etype: MPI_Datatype,
        filetype: MPI_Datatype,
        datarep: *const ::std::os::raw::c_char,
        info: MPI_Info,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_view(
        fh: MPI_File,
        disp: *mut MPI_Offset,
        etype: *mut MPI_Datatype,
        filetype: *mut MPI_Datatype,
        datarep: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iread_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iwrite_at(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iread_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iwrite_at_all(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_all(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_all(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iread(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iwrite(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iread_all(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iwrite_all(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_seek(
        fh: MPI_File,
        offset: MPI_Offset,
        whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_position(fh: MPI_File, offset: *mut MPI_Offset) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_byte_offset(
        fh: MPI_File,
        offset: MPI_Offset,
        disp: *mut MPI_Offset,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_shared(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_shared(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iread_shared(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_iwrite_shared(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_ordered(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_ordered(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_seek_shared(
        fh: MPI_File,
        offset: MPI_Offset,
        whence: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_position_shared(
        fh: MPI_File,
        offset: *mut MPI_Offset,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_at_all_begin(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_at_all_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_at_all_begin(
        fh: MPI_File,
        offset: MPI_Offset,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_at_all_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_all_begin(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_all_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_all_begin(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_all_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_ordered_begin(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_read_ordered_end(
        fh: MPI_File,
        buf: *mut ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_ordered_begin(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_write_ordered_end(
        fh: MPI_File,
        buf: *const ::std::os::raw::c_void,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_type_extent(
        fh: MPI_File,
        datatype: MPI_Datatype,
        extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_set_atomicity(
        fh: MPI_File,
        flag: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_get_atomicity(
        fh: MPI_File,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_File_sync(fh: MPI_File) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Finalize() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Finalized(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Free_mem(base: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Gather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Igather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Gatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Igatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_address(
        location: *const ::std::os::raw::c_void,
        address: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_count(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_elements(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_elements_x(
        status: *const MPI_Status,
        datatype: MPI_Datatype,
        count: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get(
        origin_addr: *mut ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        result_addr: *mut ::std::os::raw::c_void,
        result_count: ::std::os::raw::c_int,
        result_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_library_version(
        version: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_processor_name(
        name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Get_version(
        version: *mut ::std::os::raw::c_int,
        subversion: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graph_create(
        comm_old: MPI_Comm,
        nnodes: ::std::os::raw::c_int,
        index: *const ::std::os::raw::c_int,
        edges: *const ::std::os::raw::c_int,
        reorder: ::std::os::raw::c_int,
        comm_graph: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graph_get(
        comm: MPI_Comm,
        maxindex: ::std::os::raw::c_int,
        maxedges: ::std::os::raw::c_int,
        index: *mut ::std::os::raw::c_int,
        edges: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graph_map(
        comm: MPI_Comm,
        nnodes: ::std::os::raw::c_int,
        index: *const ::std::os::raw::c_int,
        edges: *const ::std::os::raw::c_int,
        newrank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graph_neighbors_count(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        nneighbors: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graph_neighbors(
        comm: MPI_Comm,
        rank: ::std::os::raw::c_int,
        maxneighbors: ::std::os::raw::c_int,
        neighbors: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Graphdims_get(
        comm: MPI_Comm,
        nnodes: *mut ::std::os::raw::c_int,
        nedges: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Grequest_complete(request: MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Grequest_start(
        query_fn: MPI_Grequest_query_function,
        free_fn: MPI_Grequest_free_function,
        cancel_fn: MPI_Grequest_cancel_function,
        extra_state: *mut ::std::os::raw::c_void,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_c2f(group: MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_compare(
        group1: MPI_Group,
        group2: MPI_Group,
        result: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_difference(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_excl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks: *const ::std::os::raw::c_int,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_f2c(group: ::std::os::raw::c_int) -> MPI_Group;
}
extern "C" {
    pub fn PMPI_Group_free(group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_incl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks: *const ::std::os::raw::c_int,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_intersection(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_range_excl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranges: *mut [::std::os::raw::c_int; 3usize],
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_range_incl(
        group: MPI_Group,
        n: ::std::os::raw::c_int,
        ranges: *mut [::std::os::raw::c_int; 3usize],
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_rank(
        group: MPI_Group,
        rank: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_size(
        group: MPI_Group,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_translate_ranks(
        group1: MPI_Group,
        n: ::std::os::raw::c_int,
        ranks1: *const ::std::os::raw::c_int,
        group2: MPI_Group,
        ranks2: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Group_union(
        group1: MPI_Group,
        group2: MPI_Group,
        newgroup: *mut MPI_Group,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ibsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Improbe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Imrecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        type_: MPI_Datatype,
        message: *mut MPI_Message,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_c2f(info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_create(info: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_delete(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_dup(info: MPI_Info, newinfo: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_f2c(info: ::std::os::raw::c_int) -> MPI_Info;
}
extern "C" {
    pub fn PMPI_Info_free(info: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_get(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        valuelen: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_char,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_get_nkeys(
        info: MPI_Info,
        nkeys: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_get_nthkey(
        info: MPI_Info,
        n: ::std::os::raw::c_int,
        key: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_get_valuelen(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        valuelen: *mut ::std::os::raw::c_int,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Info_set(
        info: MPI_Info,
        key: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Init(
        argc: *mut ::std::os::raw::c_int,
        argv: *mut *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Initialized(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Init_thread(
        argc: *mut ::std::os::raw::c_int,
        argv: *mut *mut *mut ::std::os::raw::c_char,
        required: ::std::os::raw::c_int,
        provided: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Intercomm_create(
        local_comm: MPI_Comm,
        local_leader: ::std::os::raw::c_int,
        bridge_comm: MPI_Comm,
        remote_leader: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        newintercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Intercomm_merge(
        intercomm: MPI_Comm,
        high: ::std::os::raw::c_int,
        newintercomm: *mut MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iprobe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Irecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Irsend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Isend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Issend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Is_thread_main(flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Lookup_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Message_c2f(message: MPI_Message) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Message_f2c(message: ::std::os::raw::c_int) -> MPI_Message;
}
extern "C" {
    pub fn PMPI_Mprobe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Mrecv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        type_: MPI_Datatype,
        message: *mut MPI_Message,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Neighbor_allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ineighbor_allgather(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Neighbor_allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ineighbor_allgatherv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Neighbor_alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ineighbor_alltoall(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Neighbor_alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ineighbor_alltoallv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Neighbor_alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const MPI_Aint,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const MPI_Aint,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ineighbor_alltoallw(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        sdispls: *const MPI_Aint,
        sendtypes: *const MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        rdispls: *const MPI_Aint,
        recvtypes: *const MPI_Datatype,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Op_c2f(op: MPI_Op) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Op_commutative(
        op: MPI_Op,
        commute: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Op_create(
        function: MPI_User_function,
        commute: ::std::os::raw::c_int,
        op: *mut MPI_Op,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Open_port(
        info: MPI_Info,
        port_name: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Op_f2c(op: ::std::os::raw::c_int) -> MPI_Op;
}
extern "C" {
    pub fn PMPI_Op_free(op: *mut MPI_Op) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Pack_external(
        datarep: *const ::std::os::raw::c_char,
        inbuf: *const ::std::os::raw::c_void,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        outbuf: *mut ::std::os::raw::c_void,
        outsize: MPI_Aint,
        position: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Pack_external_size(
        datarep: *const ::std::os::raw::c_char,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        size: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Pack(
        inbuf: *const ::std::os::raw::c_void,
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        outbuf: *mut ::std::os::raw::c_void,
        outsize: ::std::os::raw::c_int,
        position: *mut ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Pack_size(
        incount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        comm: MPI_Comm,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Pcontrol(level: ::std::os::raw::c_int, ...) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Probe(
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Publish_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Put(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Query_thread(provided: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Raccumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Recv_init(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Recv(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Reduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ireduce(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Reduce_local(
        inbuf: *const ::std::os::raw::c_void,
        inoutbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        arg1: MPI_Op,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Reduce_scatter(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ireduce_scatter(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcounts: *const ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Reduce_scatter_block(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ireduce_scatter_block(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Register_datarep(
        datarep: *const ::std::os::raw::c_char,
        read_conversion_fn: MPI_Datarep_conversion_function,
        write_conversion_fn: MPI_Datarep_conversion_function,
        dtype_file_extent_fn: MPI_Datarep_extent_function,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Request_c2f(request: MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Request_f2c(request: ::std::os::raw::c_int) -> MPI_Request;
}
extern "C" {
    pub fn PMPI_Request_free(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Request_get_status(
        request: MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Rget(
        origin_addr: *mut ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Rget_accumulate(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        result_addr: *mut ::std::os::raw::c_void,
        result_count: ::std::os::raw::c_int,
        result_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_count: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        op: MPI_Op,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Rput(
        origin_addr: *const ::std::os::raw::c_void,
        origin_count: ::std::os::raw::c_int,
        origin_datatype: MPI_Datatype,
        target_rank: ::std::os::raw::c_int,
        target_disp: MPI_Aint,
        target_cout: ::std::os::raw::c_int,
        target_datatype: MPI_Datatype,
        win: MPI_Win,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Rsend(
        ibuf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Rsend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Scan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iscan(
        sendbuf: *const ::std::os::raw::c_void,
        recvbuf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        op: MPI_Op,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Scatter(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iscatter(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Scatterv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Iscatterv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcounts: *const ::std::os::raw::c_int,
        displs: *const ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        root: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Send_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Send(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Sendrecv(
        sendbuf: *const ::std::os::raw::c_void,
        sendcount: ::std::os::raw::c_int,
        sendtype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        sendtag: ::std::os::raw::c_int,
        recvbuf: *mut ::std::os::raw::c_void,
        recvcount: ::std::os::raw::c_int,
        recvtype: MPI_Datatype,
        source: ::std::os::raw::c_int,
        recvtag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Sendrecv_replace(
        buf: *mut ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        sendtag: ::std::os::raw::c_int,
        source: ::std::os::raw::c_int,
        recvtag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ssend_init(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
        request: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Ssend(
        buf: *const ::std::os::raw::c_void,
        count: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        dest: ::std::os::raw::c_int,
        tag: ::std::os::raw::c_int,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Start(request: *mut MPI_Request) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Startall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Status_c2f(
        c_status: *const MPI_Status,
        f_status: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Status_f2c(
        f_status: *const ::std::os::raw::c_int,
        c_status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Status_set_cancelled(
        status: *mut MPI_Status,
        flag: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Status_set_elements(
        status: *mut MPI_Status,
        datatype: MPI_Datatype,
        count: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Status_set_elements_x(
        status: *mut MPI_Status,
        datatype: MPI_Datatype,
        count: MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Testall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Testany(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        index: *mut ::std::os::raw::c_int,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Test(
        request: *mut MPI_Request,
        flag: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Test_cancelled(
        status: *const MPI_Status,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Testsome(
        incount: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        outcount: *mut ::std::os::raw::c_int,
        array_of_indices: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Topo_test(
        comm: MPI_Comm,
        status: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_c2f(datatype: MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_commit(type_: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_contiguous(
        count: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_darray(
        size: ::std::os::raw::c_int,
        rank: ::std::os::raw::c_int,
        ndims: ::std::os::raw::c_int,
        gsize_array: *const ::std::os::raw::c_int,
        distrib_array: *const ::std::os::raw::c_int,
        darg_array: *const ::std::os::raw::c_int,
        psize_array: *const ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_f90_complex(
        p: ::std::os::raw::c_int,
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_f90_integer(
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_f90_real(
        p: ::std::os::raw::c_int,
        r: ::std::os::raw::c_int,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_hindexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_hvector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_keyval(
        type_copy_attr_fn: MPI_Type_copy_attr_function,
        type_delete_attr_fn: MPI_Type_delete_attr_function,
        type_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_hindexed_block(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_indexed_block(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        array_of_displacements: *const ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_struct(
        count: ::std::os::raw::c_int,
        array_of_block_lengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const MPI_Aint,
        array_of_types: *const MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_subarray(
        ndims: ::std::os::raw::c_int,
        size_array: *const ::std::os::raw::c_int,
        subsize_array: *const ::std::os::raw::c_int,
        start_array: *const ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_create_resized(
        oldtype: MPI_Datatype,
        lb: MPI_Aint,
        extent: MPI_Aint,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_delete_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_dup(type_: MPI_Datatype, newtype: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_free(type_: *mut MPI_Datatype) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_free_keyval(type_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_f2c(datatype: ::std::os::raw::c_int) -> MPI_Datatype;
}
extern "C" {
    pub fn PMPI_Type_get_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_contents(
        mtype: MPI_Datatype,
        max_integers: ::std::os::raw::c_int,
        max_addresses: ::std::os::raw::c_int,
        max_datatypes: ::std::os::raw::c_int,
        array_of_integers: *mut ::std::os::raw::c_int,
        array_of_addresses: *mut MPI_Aint,
        array_of_datatypes: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_envelope(
        type_: MPI_Datatype,
        num_integers: *mut ::std::os::raw::c_int,
        num_addresses: *mut ::std::os::raw::c_int,
        num_datatypes: *mut ::std::os::raw::c_int,
        combiner: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_extent(
        type_: MPI_Datatype,
        lb: *mut MPI_Aint,
        extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_extent_x(
        type_: MPI_Datatype,
        lb: *mut MPI_Count,
        extent: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_name(
        type_: MPI_Datatype,
        type_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_true_extent(
        datatype: MPI_Datatype,
        true_lb: *mut MPI_Aint,
        true_extent: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_get_true_extent_x(
        datatype: MPI_Datatype,
        true_lb: *mut MPI_Count,
        true_extent: *mut MPI_Count,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_indexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *const ::std::os::raw::c_int,
        array_of_displacements: *const ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_match_size(
        typeclass: ::std::os::raw::c_int,
        size: ::std::os::raw::c_int,
        type_: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_set_attr(
        type_: MPI_Datatype,
        type_keyval: ::std::os::raw::c_int,
        attr_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_set_name(
        type_: MPI_Datatype,
        type_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_size(
        type_: MPI_Datatype,
        size: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_size_x(type_: MPI_Datatype, size: *mut MPI_Count) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_vector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: ::std::os::raw::c_int,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Unpack(
        inbuf: *const ::std::os::raw::c_void,
        insize: ::std::os::raw::c_int,
        position: *mut ::std::os::raw::c_int,
        outbuf: *mut ::std::os::raw::c_void,
        outcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
        comm: MPI_Comm,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Unpublish_name(
        service_name: *const ::std::os::raw::c_char,
        info: MPI_Info,
        port_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Unpack_external(
        datarep: *const ::std::os::raw::c_char,
        inbuf: *const ::std::os::raw::c_void,
        insize: MPI_Aint,
        position: *mut MPI_Aint,
        outbuf: *mut ::std::os::raw::c_void,
        outcount: ::std::os::raw::c_int,
        datatype: MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Waitall(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Waitany(
        count: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        index: *mut ::std::os::raw::c_int,
        status: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Wait(request: *mut MPI_Request, status: *mut MPI_Status) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Waitsome(
        incount: ::std::os::raw::c_int,
        array_of_requests: *mut MPI_Request,
        outcount: *mut ::std::os::raw::c_int,
        array_of_indices: *mut ::std::os::raw::c_int,
        array_of_statuses: *mut MPI_Status,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_allocate(
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        baseptr: *mut ::std::os::raw::c_void,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_allocate_shared(
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        baseptr: *mut ::std::os::raw::c_void,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_attach(
        win: MPI_Win,
        base: *mut ::std::os::raw::c_void,
        size: MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_c2f(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_call_errhandler(
        win: MPI_Win,
        errorcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_complete(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_create(
        base: *mut ::std::os::raw::c_void,
        size: MPI_Aint,
        disp_unit: ::std::os::raw::c_int,
        info: MPI_Info,
        comm: MPI_Comm,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_create_dynamic(
        info: MPI_Info,
        comm: MPI_Comm,
        win: *mut MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_create_errhandler(
        function: MPI_Win_errhandler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_create_keyval(
        win_copy_attr_fn: MPI_Win_copy_attr_function,
        win_delete_attr_fn: MPI_Win_delete_attr_function,
        win_keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_delete_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_detach(
        win: MPI_Win,
        base: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_f2c(win: ::std::os::raw::c_int) -> MPI_Win;
}
extern "C" {
    pub fn PMPI_Win_fence(assert: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_flush(rank: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_flush_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_flush_local(rank: ::std::os::raw::c_int, win: MPI_Win)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_flush_local_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_free(win: *mut MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_free_keyval(win_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_get_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_get_errhandler(
        win: MPI_Win,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_get_group(win: MPI_Win, group: *mut MPI_Group) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_get_info(win: MPI_Win, info_used: *mut MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_get_name(
        win: MPI_Win,
        win_name: *mut ::std::os::raw::c_char,
        resultlen: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_lock(
        lock_type: ::std::os::raw::c_int,
        rank: ::std::os::raw::c_int,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_lock_all(assert: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_post(
        group: MPI_Group,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_set_attr(
        win: MPI_Win,
        win_keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_set_errhandler(
        win: MPI_Win,
        errhandler: MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_set_info(win: MPI_Win, info: MPI_Info) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_set_name(
        win: MPI_Win,
        win_name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_shared_query(
        win: MPI_Win,
        rank: ::std::os::raw::c_int,
        size: *mut MPI_Aint,
        disp_unit: *mut ::std::os::raw::c_int,
        baseptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_start(
        group: MPI_Group,
        assert: ::std::os::raw::c_int,
        win: MPI_Win,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_sync(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_test(win: MPI_Win, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_unlock(rank: ::std::os::raw::c_int, win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_unlock_all(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Win_wait(win: MPI_Win) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Wtick() -> f64;
}
extern "C" {
    pub fn PMPI_Wtime() -> f64;
}
extern "C" {
    pub fn PMPI_T_init_thread(
        required: ::std::os::raw::c_int,
        provided: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_finalize() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_get_num(num_cvar: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_get_info(
        cvar_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        verbosity: *mut ::std::os::raw::c_int,
        datatype: *mut MPI_Datatype,
        enumtype: *mut MPI_T_enum,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        bind: *mut ::std::os::raw::c_int,
        scope: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_get_index(
        name: *const ::std::os::raw::c_char,
        cvar_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_handle_alloc(
        cvar_index: ::std::os::raw::c_int,
        obj_handle: *mut ::std::os::raw::c_void,
        handle: *mut MPI_T_cvar_handle,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_handle_free(handle: *mut MPI_T_cvar_handle) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_read(
        handle: MPI_T_cvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_cvar_write(
        handle: MPI_T_cvar_handle,
        buf: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_num(num_cat: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_info(
        cat_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        num_cvars: *mut ::std::os::raw::c_int,
        num_pvars: *mut ::std::os::raw::c_int,
        num_categories: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_index(
        name: *const ::std::os::raw::c_char,
        category_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_cvars(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_pvars(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_get_categories(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_category_changed(stamp: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_get_num(num_pvar: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_get_info(
        pvar_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        verbosity: *mut ::std::os::raw::c_int,
        var_class: *mut ::std::os::raw::c_int,
        datatype: *mut MPI_Datatype,
        enumtype: *mut MPI_T_enum,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        bind: *mut ::std::os::raw::c_int,
        readonly: *mut ::std::os::raw::c_int,
        continuous: *mut ::std::os::raw::c_int,
        atomic: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_get_index(
        name: *const ::std::os::raw::c_char,
        var_class: ::std::os::raw::c_int,
        pvar_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_session_create(session: *mut MPI_T_pvar_session) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_session_free(session: *mut MPI_T_pvar_session) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_handle_alloc(
        session: MPI_T_pvar_session,
        pvar_index: ::std::os::raw::c_int,
        obj_handle: *mut ::std::os::raw::c_void,
        handle: *mut MPI_T_pvar_handle,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_handle_free(
        session: MPI_T_pvar_session,
        handle: *mut MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_start(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_stop(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_read(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_write(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_reset(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_pvar_readreset(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_enum_get_info(
        enumtype: MPI_T_enum,
        num: *mut ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_T_enum_get_item(
        enumtype: MPI_T_enum,
        index: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_init_thread(
        required: ::std::os::raw::c_int,
        provided: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_finalize() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_get_num(num_cvar: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_get_info(
        cvar_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        verbosity: *mut ::std::os::raw::c_int,
        datatype: *mut MPI_Datatype,
        enumtype: *mut MPI_T_enum,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        bind: *mut ::std::os::raw::c_int,
        scope: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_get_index(
        name: *const ::std::os::raw::c_char,
        cvar_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_handle_alloc(
        cvar_index: ::std::os::raw::c_int,
        obj_handle: *mut ::std::os::raw::c_void,
        handle: *mut MPI_T_cvar_handle,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_handle_free(handle: *mut MPI_T_cvar_handle) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_read(
        handle: MPI_T_cvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_cvar_write(
        handle: MPI_T_cvar_handle,
        buf: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_num(num_cat: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_info(
        cat_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        num_cvars: *mut ::std::os::raw::c_int,
        num_pvars: *mut ::std::os::raw::c_int,
        num_categories: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_index(
        name: *const ::std::os::raw::c_char,
        category_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_cvars(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_pvars(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_get_categories(
        cat_index: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        indices: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_category_changed(stamp: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_get_num(num_pvar: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_get_info(
        pvar_index: ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
        verbosity: *mut ::std::os::raw::c_int,
        var_class: *mut ::std::os::raw::c_int,
        datatype: *mut MPI_Datatype,
        enumtype: *mut MPI_T_enum,
        desc: *mut ::std::os::raw::c_char,
        desc_len: *mut ::std::os::raw::c_int,
        bind: *mut ::std::os::raw::c_int,
        readonly: *mut ::std::os::raw::c_int,
        continuous: *mut ::std::os::raw::c_int,
        atomic: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_get_index(
        name: *const ::std::os::raw::c_char,
        var_class: ::std::os::raw::c_int,
        pvar_index: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_session_create(session: *mut MPI_T_pvar_session) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_session_free(session: *mut MPI_T_pvar_session) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_handle_alloc(
        session: MPI_T_pvar_session,
        pvar_index: ::std::os::raw::c_int,
        obj_handle: *mut ::std::os::raw::c_void,
        handle: *mut MPI_T_pvar_handle,
        count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_handle_free(
        session: MPI_T_pvar_session,
        handle: *mut MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_start(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_stop(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_read(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_write(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_reset(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_pvar_readreset(
        session: MPI_T_pvar_session,
        handle: MPI_T_pvar_handle,
        buf: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_enum_get_info(
        enumtype: MPI_T_enum,
        num: *mut ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_T_enum_get_item(
        enumtype: MPI_T_enum,
        index: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_int,
        name: *mut ::std::os::raw::c_char,
        name_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Attr_delete(comm: MPI_Comm, keyval: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Attr_delete(comm: MPI_Comm, keyval: ::std::os::raw::c_int)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Attr_get(
        comm: MPI_Comm,
        keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Attr_get(
        comm: MPI_Comm,
        keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Attr_put(
        comm: MPI_Comm,
        keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Attr_put(
        comm: MPI_Comm,
        keyval: ::std::os::raw::c_int,
        attribute_val: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
pub type MPI_Copy_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Comm,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
        arg5: *mut ::std::os::raw::c_void,
        arg6: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type MPI_Delete_function = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: MPI_Comm,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_void,
        arg4: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub fn MPI_Keyval_create(
        copy_fn: MPI_Copy_function,
        delete_fn: MPI_Delete_function,
        keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Keyval_create(
        copy_fn: MPI_Copy_function,
        delete_fn: MPI_Delete_function,
        keyval: *mut ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Keyval_free(keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Keyval_free(keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_DUP_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_NULL_COPY_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        extra_state: *mut ::std::os::raw::c_void,
        attribute_val_in: *mut ::std::os::raw::c_void,
        attribute_val_out: *mut ::std::os::raw::c_void,
        flag: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OMPI_C_MPI_NULL_DELETE_FN(
        comm: MPI_Comm,
        comm_keyval: ::std::os::raw::c_int,
        attribute_val_out: *mut ::std::os::raw::c_void,
        extra_state: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
pub type MPI_Handler_function = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut MPI_Comm, arg2: *mut ::std::os::raw::c_int, ...),
>;
extern "C" {
    pub fn MPI_Address(
        location: *mut ::std::os::raw::c_void,
        address: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Address(
        location: *mut ::std::os::raw::c_void,
        address: *mut MPI_Aint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Errhandler_create(
        function: MPI_Handler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Errhandler_create(
        function: MPI_Handler_function,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Errhandler_get(
        comm: MPI_Comm,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Errhandler_get(
        comm: MPI_Comm,
        errhandler: *mut MPI_Errhandler,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Errhandler_set(comm: MPI_Comm, errhandler: MPI_Errhandler) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Errhandler_set(comm: MPI_Comm, errhandler: MPI_Errhandler)
        -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_extent(type_: MPI_Datatype, extent: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_extent(type_: MPI_Datatype, extent: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_hindexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *mut ::std::os::raw::c_int,
        array_of_displacements: *mut MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_hindexed(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *mut ::std::os::raw::c_int,
        array_of_displacements: *mut MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_hvector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_hvector(
        count: ::std::os::raw::c_int,
        blocklength: ::std::os::raw::c_int,
        stride: MPI_Aint,
        oldtype: MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_lb(type_: MPI_Datatype, lb: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_lb(type_: MPI_Datatype, lb: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_struct(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *mut ::std::os::raw::c_int,
        array_of_displacements: *mut MPI_Aint,
        array_of_types: *mut MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_struct(
        count: ::std::os::raw::c_int,
        array_of_blocklengths: *mut ::std::os::raw::c_int,
        array_of_displacements: *mut MPI_Aint,
        array_of_types: *mut MPI_Datatype,
        newtype: *mut MPI_Datatype,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MPI_Type_ub(mtype: MPI_Datatype, ub: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PMPI_Type_ub(mtype: MPI_Datatype, ub: *mut MPI_Aint) -> ::std::os::raw::c_int;
}
